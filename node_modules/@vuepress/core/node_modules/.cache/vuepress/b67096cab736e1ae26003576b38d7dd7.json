{"remainingRequest":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","dependencies":[{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","mtime":499162500000},{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBUT0RPOiBSZW1vdmUgZnJvbSBgY29yZS1qc0A0YCBzaW5jZSBpdCdzIG1vdmVkIHRvIGVudHJ5IHBvaW50cwoKcmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5yZWdleHAuZXhlYycpOwoKdmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7Cgp2YXIgcmVnZXhwRXhlYyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtZXhlYycpOwoKdmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7Cgp2YXIgd2VsbEtub3duU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3dlbGwta25vd24tc3ltYm9sJyk7Cgp2YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpOwoKdmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTsKdmFyIFJlZ0V4cFByb3RvdHlwZSA9IFJlZ0V4cC5wcm90b3R5cGU7Cgptb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEZPUkNFRCwgU0hBTSkgewogIHZhciBTWU1CT0wgPSB3ZWxsS25vd25TeW1ib2woS0VZKTsKICB2YXIgREVMRUdBVEVTX1RPX1NZTUJPTCA9ICFmYWlscyhmdW5jdGlvbiAoKSB7CiAgICAvLyBTdHJpbmcgbWV0aG9kcyBjYWxsIHN5bWJvbC1uYW1lZCBSZWdFcCBtZXRob2RzCiAgICB2YXIgTyA9IHt9OwoKICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIDc7CiAgICB9OwoKICAgIHJldHVybiAnJ1tLRVldKE8pICE9IDc7CiAgfSk7CiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkgewogICAgLy8gU3ltYm9sLW5hbWVkIFJlZ0V4cCBtZXRob2RzIGNhbGwgLmV4ZWMKICAgIHZhciBleGVjQ2FsbGVkID0gZmFsc2U7CiAgICB2YXIgcmUgPSAvYS87CgogICAgaWYgKEtFWSA9PT0gJ3NwbGl0JykgewogICAgICAvLyBXZSBjYW4ndCB1c2UgcmVhbCByZWdleCBoZXJlIHNpbmNlIGl0IGNhdXNlcyBkZW9wdGltaXphdGlvbgogICAgICAvLyBhbmQgc2VyaW91cyBwZXJmb3JtYW5jZSBkZWdyYWRhdGlvbiBpbiBWOAogICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMzA2CiAgICAgIHJlID0ge307IC8vIFJlZ0V4cFtAQHNwbGl0XSBkb2Vzbid0IGNhbGwgdGhlIHJlZ2V4J3MgZXhlYyBtZXRob2QsIGJ1dCBmaXJzdCBjcmVhdGVzCiAgICAgIC8vIGEgbmV3IG9uZS4gV2UgbmVlZCB0byByZXR1cm4gdGhlIHBhdGNoZWQgcmVnZXggd2hlbiBjcmVhdGluZyB0aGUgbmV3IG9uZS4KCiAgICAgIHJlLmNvbnN0cnVjdG9yID0ge307CgogICAgICByZS5jb25zdHJ1Y3RvcltTUEVDSUVTXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gcmU7CiAgICAgIH07CgogICAgICByZS5mbGFncyA9ICcnOwogICAgICByZVtTWU1CT0xdID0gLy4vW1NZTUJPTF07CiAgICB9CgogICAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHsKICAgICAgZXhlY0NhbGxlZCA9IHRydWU7CiAgICAgIHJldHVybiBudWxsOwogICAgfTsKCiAgICByZVtTWU1CT0xdKCcnKTsKICAgIHJldHVybiAhZXhlY0NhbGxlZDsKICB9KTsKCiAgaWYgKCFERUxFR0FURVNfVE9fU1lNQk9MIHx8ICFERUxFR0FURVNfVE9fRVhFQyB8fCBGT1JDRUQpIHsKICAgIHZhciBuYXRpdmVSZWdFeHBNZXRob2QgPSAvLi9bU1lNQk9MXTsKICAgIHZhciBtZXRob2RzID0gZXhlYyhTWU1CT0wsICcnW0tFWV0sIGZ1bmN0aW9uIChuYXRpdmVNZXRob2QsIHJlZ2V4cCwgc3RyLCBhcmcyLCBmb3JjZVN0cmluZ01ldGhvZCkgewogICAgICB2YXIgJGV4ZWMgPSByZWdleHAuZXhlYzsKCiAgICAgIGlmICgkZXhlYyA9PT0gcmVnZXhwRXhlYyB8fCAkZXhlYyA9PT0gUmVnRXhwUHJvdG90eXBlLmV4ZWMpIHsKICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHsKICAgICAgICAgIC8vIFRoZSBuYXRpdmUgU3RyaW5nIG1ldGhvZCBhbHJlYWR5IGRlbGVnYXRlcyB0byBAQG1ldGhvZCAodGhpcwogICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLgogICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC4KICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGRvbmU6IHRydWUsCiAgICAgICAgICAgIHZhbHVlOiBuYXRpdmVSZWdFeHBNZXRob2QuY2FsbChyZWdleHAsIHN0ciwgYXJnMikKICAgICAgICAgIH07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgZG9uZTogdHJ1ZSwKICAgICAgICAgIHZhbHVlOiBuYXRpdmVNZXRob2QuY2FsbChzdHIsIHJlZ2V4cCwgYXJnMikKICAgICAgICB9OwogICAgICB9CgogICAgICByZXR1cm4gewogICAgICAgIGRvbmU6IGZhbHNlCiAgICAgIH07CiAgICB9KTsKICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgbWV0aG9kc1swXSk7CiAgICByZWRlZmluZShSZWdFeHBQcm90b3R5cGUsIFNZTUJPTCwgbWV0aG9kc1sxXSk7CiAgfQoKICBpZiAoU0hBTSkgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KFJlZ0V4cFByb3RvdHlwZVtTWU1CT0xdLCAnc2hhbScsIHRydWUpOwp9Ow=="},{"version":3,"sources":["C:/laragon/www/vuepress-test/docs/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js"],"names":["require","redefine","regexpExec","fails","wellKnownSymbol","createNonEnumerableProperty","SPECIES","RegExpPrototype","RegExp","prototype","module","exports","KEY","exec","FORCED","SHAM","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","re","constructor","flags","nativeRegExpMethod","methods","nativeMethod","regexp","str","arg2","forceStringMethod","$exec","done","value","call","String"],"mappings":"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","sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (KEY, exec, FORCED, SHAM) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    FORCED\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      var $exec = regexp.exec;\n      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    });\n\n    redefine(String.prototype, KEY, methods[0]);\n    redefine(RegExpPrototype, SYMBOL, methods[1]);\n  }\n\n  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);\n};\n"]}]}