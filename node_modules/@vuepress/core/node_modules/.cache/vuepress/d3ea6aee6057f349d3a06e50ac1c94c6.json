{"remainingRequest":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\core-js\\modules\\es.string.split.js","dependencies":[{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\core-js\\modules\\es.string.split.js","mtime":499162500000},{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\vuepress-test\\docs\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTsKCnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1yZWdleHAnKTsKCnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTsKCnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpOwoKdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7Cgp2YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7Cgp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7Cgp2YXIgdG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nJyk7Cgp2YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTsKCnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjJyk7Cgp2YXIgc3RpY2t5SGVscGVycyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZWdleHAtc3RpY2t5LWhlbHBlcnMnKTsKCnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpOwoKdmFyIFVOU1VQUE9SVEVEX1kgPSBzdGlja3lIZWxwZXJzLlVOU1VQUE9SVEVEX1k7CnZhciBhcnJheVB1c2ggPSBbXS5wdXNoOwp2YXIgbWluID0gTWF0aC5taW47CnZhciBNQVhfVUlOVDMyID0gMHhGRkZGRkZGRjsgLy8gQ2hyb21lIDUxIGhhcyBhIGJ1Z2d5ICJzcGxpdCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlYwovLyBXZWV4IEpTIGhhcyBmcm96ZW4gYnVpbHQtaW4gcHJvdG90eXBlcywgc28gdXNlIHRyeSAvIGNhdGNoIHdyYXBwZXIKCnZhciBTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMgPSAhZmFpbHMoZnVuY3Rpb24gKCkgewogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tZW1wdHktZ3JvdXAgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcKICB2YXIgcmUgPSAvKD86KS87CiAgdmFyIG9yaWdpbmFsRXhlYyA9IHJlLmV4ZWM7CgogIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKCiAgdmFyIHJlc3VsdCA9ICdhYicuc3BsaXQocmUpOwogIHJldHVybiByZXN1bHQubGVuZ3RoICE9PSAyIHx8IHJlc3VsdFswXSAhPT0gJ2EnIHx8IHJlc3VsdFsxXSAhPT0gJ2InOwp9KTsgLy8gQEBzcGxpdCBsb2dpYwoKZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMoJ3NwbGl0JywgZnVuY3Rpb24gKFNQTElULCBuYXRpdmVTcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7CiAgdmFyIGludGVybmFsU3BsaXQ7CgogIGlmICgnYWJiYycuc3BsaXQoLyhiKSovKVsxXSA9PSAnYycgfHwgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1lbXB0eS1ncm91cCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZwogICd0ZXN0Jy5zcGxpdCgvKD86KS8sIC0xKS5sZW5ndGggIT0gNCB8fCAnYWInLnNwbGl0KC8oPzphYikqLykubGVuZ3RoICE9IDIgfHwgJy4nLnNwbGl0KC8oLj8pKC4/KS8pLmxlbmd0aCAhPSA0IHx8IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tZW1wdHktY2FwdHVyaW5nLWdyb3VwLCByZWdleHAvbm8tZW1wdHktZ3JvdXAgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcKICAnLicuc3BsaXQoLygpKCkvKS5sZW5ndGggPiAxIHx8ICcnLnNwbGl0KC8uPy8pLmxlbmd0aCkgewogICAgLy8gYmFzZWQgb24gZXM1LXNoaW0gaW1wbGVtZW50YXRpb24sIG5lZWQgdG8gcmV3b3JrIGl0CiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gKHNlcGFyYXRvciwgbGltaXQpIHsKICAgICAgdmFyIHN0cmluZyA9IHRvU3RyaW5nKHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcykpOwogICAgICB2YXIgbGltID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IE1BWF9VSU5UMzIgOiBsaW1pdCA+Pj4gMDsKICAgICAgaWYgKGxpbSA9PT0gMCkgcmV0dXJuIFtdOwogICAgICBpZiAoc2VwYXJhdG9yID09PSB1bmRlZmluZWQpIHJldHVybiBbc3RyaW5nXTsgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXQKCiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgewogICAgICAgIHJldHVybiBuYXRpdmVTcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW0pOwogICAgICB9CgogICAgICB2YXIgb3V0cHV0ID0gW107CiAgICAgIHZhciBmbGFncyA9IChzZXBhcmF0b3IuaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArIChzZXBhcmF0b3IubXVsdGlsaW5lID8gJ20nIDogJycpICsgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICsgKHNlcGFyYXRvci5zdGlja3kgPyAneScgOiAnJyk7CiAgICAgIHZhciBsYXN0TGFzdEluZGV4ID0gMDsgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHkKCiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7CiAgICAgIHZhciBtYXRjaCwgbGFzdEluZGV4LCBsYXN0TGVuZ3RoOwoKICAgICAgd2hpbGUgKG1hdGNoID0gcmVnZXhwRXhlYy5jYWxsKHNlcGFyYXRvckNvcHksIHN0cmluZykpIHsKICAgICAgICBsYXN0SW5kZXggPSBzZXBhcmF0b3JDb3B5Lmxhc3RJbmRleDsKCiAgICAgICAgaWYgKGxhc3RJbmRleCA+IGxhc3RMYXN0SW5kZXgpIHsKICAgICAgICAgIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4LCBtYXRjaC5pbmRleCkpOwogICAgICAgICAgaWYgKG1hdGNoLmxlbmd0aCA+IDEgJiYgbWF0Y2guaW5kZXggPCBzdHJpbmcubGVuZ3RoKSBhcnJheVB1c2guYXBwbHkob3V0cHV0LCBtYXRjaC5zbGljZSgxKSk7CiAgICAgICAgICBsYXN0TGVuZ3RoID0gbWF0Y2hbMF0ubGVuZ3RoOwogICAgICAgICAgbGFzdExhc3RJbmRleCA9IGxhc3RJbmRleDsKICAgICAgICAgIGlmIChvdXRwdXQubGVuZ3RoID49IGxpbSkgYnJlYWs7CiAgICAgICAgfQoKICAgICAgICBpZiAoc2VwYXJhdG9yQ29weS5sYXN0SW5kZXggPT09IG1hdGNoLmluZGV4KSBzZXBhcmF0b3JDb3B5Lmxhc3RJbmRleCsrOyAvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wCiAgICAgIH0KCiAgICAgIGlmIChsYXN0TGFzdEluZGV4ID09PSBzdHJpbmcubGVuZ3RoKSB7CiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTsKICAgICAgfSBlbHNlIG91dHB1dC5wdXNoKHN0cmluZy5zbGljZShsYXN0TGFzdEluZGV4KSk7CgogICAgICByZXR1cm4gb3V0cHV0Lmxlbmd0aCA+IGxpbSA/IG91dHB1dC5zbGljZSgwLCBsaW0pIDogb3V0cHV0OwogICAgfTsgLy8gQ2hha3JhLCBWOAoKICB9IGVsc2UgaWYgKCcwJy5zcGxpdCh1bmRlZmluZWQsIDApLmxlbmd0aCkgewogICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAgIHJldHVybiBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCA/IFtdIDogbmF0aXZlU3BsaXQuY2FsbCh0aGlzLCBzZXBhcmF0b3IsIGxpbWl0KTsKICAgIH07CiAgfSBlbHNlIGludGVybmFsU3BsaXQgPSBuYXRpdmVTcGxpdDsKCiAgcmV0dXJuIFsvLyBgU3RyaW5nLnByb3RvdHlwZS5zcGxpdGAgbWV0aG9kCiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnNwbGl0CiAgZnVuY3Rpb24gc3BsaXQoc2VwYXJhdG9yLCBsaW1pdCkgewogICAgdmFyIE8gPSByZXF1aXJlT2JqZWN0Q29lcmNpYmxlKHRoaXMpOwogICAgdmFyIHNwbGl0dGVyID0gc2VwYXJhdG9yID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlcGFyYXRvcltTUExJVF07CiAgICByZXR1cm4gc3BsaXR0ZXIgIT09IHVuZGVmaW5lZCA/IHNwbGl0dGVyLmNhbGwoc2VwYXJhdG9yLCBPLCBsaW1pdCkgOiBpbnRlcm5hbFNwbGl0LmNhbGwodG9TdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpOwogIH0sIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdYCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdAogIC8vCiAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydAogIC8vIHRoZSAneScgZmxhZy4KICBmdW5jdGlvbiAoc3RyaW5nLCBsaW1pdCkgewogICAgdmFyIHJ4ID0gYW5PYmplY3QodGhpcyk7CiAgICB2YXIgUyA9IHRvU3RyaW5nKHN0cmluZyk7CiAgICB2YXIgcmVzID0gbWF5YmVDYWxsTmF0aXZlKGludGVybmFsU3BsaXQsIHJ4LCBTLCBsaW1pdCwgaW50ZXJuYWxTcGxpdCAhPT0gbmF0aXZlU3BsaXQpOwogICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlOwogICAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IocngsIFJlZ0V4cCk7CiAgICB2YXIgdW5pY29kZU1hdGNoaW5nID0gcngudW5pY29kZTsKICAgIHZhciBmbGFncyA9IChyeC5pZ25vcmVDYXNlID8gJ2knIDogJycpICsgKHJ4Lm11bHRpbGluZSA/ICdtJyA6ICcnKSArIChyeC51bmljb2RlID8gJ3UnIDogJycpICsgKFVOU1VQUE9SVEVEX1kgPyAnZycgOiAneScpOyAvLyBeKD8gKyByeCArICkgaXMgbmVlZGVkLCBpbiBjb21iaW5hdGlvbiB3aXRoIHNvbWUgUyBzbGljaW5nLCB0bwogICAgLy8gc2ltdWxhdGUgdGhlICd5JyBmbGFnLgoKICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFVOU1VQUE9SVEVEX1kgPyAnXig/OicgKyByeC5zb3VyY2UgKyAnKScgOiByeCwgZmxhZ3MpOwogICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7CiAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107CiAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTsKICAgIHZhciBwID0gMDsKICAgIHZhciBxID0gMDsKICAgIHZhciBBID0gW107CgogICAgd2hpbGUgKHEgPCBTLmxlbmd0aCkgewogICAgICBzcGxpdHRlci5sYXN0SW5kZXggPSBVTlNVUFBPUlRFRF9ZID8gMCA6IHE7CiAgICAgIHZhciB6ID0gY2FsbFJlZ0V4cEV4ZWMoc3BsaXR0ZXIsIFVOU1VQUE9SVEVEX1kgPyBTLnNsaWNlKHEpIDogUyk7CiAgICAgIHZhciBlOwoKICAgICAgaWYgKHogPT09IG51bGwgfHwgKGUgPSBtaW4odG9MZW5ndGgoc3BsaXR0ZXIubGFzdEluZGV4ICsgKFVOU1VQUE9SVEVEX1kgPyBxIDogMCkpLCBTLmxlbmd0aCkpID09PSBwKSB7CiAgICAgICAgcSA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCBxLCB1bmljb2RlTWF0Y2hpbmcpOwogICAgICB9IGVsc2UgewogICAgICAgIEEucHVzaChTLnNsaWNlKHAsIHEpKTsKICAgICAgICBpZiAoQS5sZW5ndGggPT09IGxpbSkgcmV0dXJuIEE7CgogICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDw9IHoubGVuZ3RoIC0gMTsgaSsrKSB7CiAgICAgICAgICBBLnB1c2goeltpXSk7CiAgICAgICAgICBpZiAoQS5sZW5ndGggPT09IGxpbSkgcmV0dXJuIEE7CiAgICAgICAgfQoKICAgICAgICBxID0gcCA9IGU7CiAgICAgIH0KICAgIH0KCiAgICBBLnB1c2goUy5zbGljZShwKSk7CiAgICByZXR1cm4gQTsKICB9XTsKfSwgIVNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQywgVU5TVVBQT1JURURfWSk7"},{"version":3,"sources":["C:/laragon/www/vuepress-test/docs/node_modules/core-js/modules/es.string.split.js"],"names":["fixRegExpWellKnownSymbolLogic","require","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","toString","callRegExpExec","regexpExec","stickyHelpers","fails","UNSUPPORTED_Y","arrayPush","push","min","Math","MAX_UINT32","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","re","originalExec","exec","apply","arguments","result","split","length","SPLIT","nativeSplit","maybeCallNative","internalSplit","separator","limit","string","lim","undefined","call","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","RegExp","source","match","lastIndex","lastLength","slice","index","test","O","splitter","rx","S","res","done","value","C","unicodeMatching","p","q","A","z","e","i"],"mappings":"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","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar toString = require('../internals/to-string');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar fails = require('../internals/fails');\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = toString(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(toString(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (string, limit) {\n      var rx = anObject(this);\n      var S = toString(string);\n      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);\n\n      if (res.done) return res.value;\n\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (UNSUPPORTED_Y ? 'g' : 'y');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;\n        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? S.slice(q) : S);\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);\n"]}]}